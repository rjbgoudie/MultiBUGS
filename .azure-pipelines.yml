jobs:
#- job: MultiBUGS_Windows
#  strategy:
#    matrix:
#      1workers_2chains:
#        CHAINS: '2'
#        WORKERS: '1'
#      2workers_2chains:
#        CHAINS: '2'
#        WORKERS: '2'
#      3workers_2chains:
#        CHAINS: '2'
#        WORKERS: '3'
#  timeoutInMinutes: 0
#  pool:
#    vmImage: 'windows-2019'
#  steps:
#  - script: |
#      echo on
#      curl -fsS -o c:\MSMpiSetup.exe https://download.microsoft.com/download/A/E/0/AE002626-9D9D-448D-8197-1EA510E297CE/msmpisetup.exe
#      c:\MSMpiSetup.exe -unattend
#      set PATH=C:\Program Files\Microsoft MPI\Bin;%PATH%
#    displayName: Update MS-MPI to version 10
#  - script: |
#      echo on
#      curl -fsS -o c:\blackbox-1.7.1.zip https://www.multibugs.org/build/blackbox-1.7.1.zip
#      7z x c:\blackbox-1.7.1.zip -y -oc:\blackbox
#      curl -fsS -o c:\blackbox\bbscript.exe https://www.multibugs.org/build/bbscript.exe
#      c:\blackbox\bbscript.exe /USE %BUILD_SOURCESDIRECTORY% /PAR Developer/Make.odc
#      c:\blackbox\bbscript.exe /USE %BUILD_SOURCESDIRECTORY% /PAR Developer/LinkingWindows.odc
#      mkdir c:\MultiBUGS\Dynamic\Sym
#      mkdir c:\MultiBUGS\Dynamic\Code
#    displayName: Install BlackBox, Make and Link MultiBUGS
#  - script: |
#      echo on
#      choco install r.project --version 3.5.1 --no-progress
#      set PATH=C:\Program Files\Microsoft MPI\Bin;C:\Program Files\R\R-3.5.1\bin\x64;%PATH%
#      Rscript.exe -e "install.packages(\"devtools\", repos=\"https://cloud.r-project.org\")" -e "install.packages(\"xml2\", repos=\"https://cloud.r-project.org\")" -e "devtools::install_github(\"MultiBUGS/R2MultiBUGS\")" -e "devtools::install_github(\"MultiBUGS/multibugstests\")"
#    displayName: Install R and required packages
#  - script: |
#      echo on
#      set PATH=C:\Program Files\Microsoft MPI\Bin;C:\Program Files\R\R-3.5.1\bin\x64;%PATH%
#      IF "%WORKERS%"=="3" Rscript.exe -e "multibugstests:::bugs_examples_all(n.workers = 3, n.chains = 2, report = \"junit\")" 
#      IF "%WORKERS%"=="2" Rscript.exe -e "multibugstests:::bugs_examples_all(n.workers = 2, n.chains = 2, report = \"junit\")"
#      IF "%WORKERS%"=="1" Rscript.exe -e "multibugstests:::bugs_examples_all(n.workers = 1, n.chains = 2, report = \"junit\")"
#      IF "%WORKERS%"=="3" Rscript.exe -e "multibugstests:::bugs_examples_all(n.workers = 3, n.chains = 2, report = \"junit\", examples.dir = \"C:/MultiBUGS/Reliability/Examples/\")"
#      IF "%WORKERS%"=="2" Rscript.exe -e "multibugstests:::bugs_examples_all(n.workers = 2, n.chains = 2, report = \"junit\", examples.dir = \"C:/MultiBUGS/Reliability/Examples/\")"
#      IF "%WORKERS%"=="1" Rscript.exe -e "multibugstests:::bugs_examples_all(n.workers = 1, n.chains = 2, report = \"junit\", examples.dir = \"C:/MultiBUGS/Reliability/Examples/\")"
#    displayName: Run tests
#  - task: PublishTestResults@2
#    inputs:
#      testResultsFiles: 'C:\MultiBUGS\TESTS-*$(WORKERS)workers-$(CHAINS)chains.xml'
#      mergeTestResults: true
#      testRunTitle: '$(WORKERS) workers; $(CHAINS) chains'
#    condition: always()
#    displayName: 'Publish Test Results'
- job: MultiBUGS_Linux
  timeoutInMinutes: 0
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: | 
      sudo Xvfb :1 -screen 0 1024x768x24 </dev/null &
      export DISPLAY=":1"
      xhost local:root
      xclock
      # Uninstalling these packages is NOT needed for MultiBUGS, but vastly speeds up apt-get update on Azure
      sudo apt-get -qq remove '^libmono.*' '^mono.*' '^php.*'
    displayName: Uninstall unnecessary packages
  - script: | 
      sudo dpkg --add-architecture i386
      sudo add-apt-repository -y "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -sc)-cran35/"
      sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
      sudo apt-get -qq -y update
      sudo apt-get install r-base libgtk2.0-0:i386 gtk2-engines:i386 gtk2-engines-murrine:i386 libcanberra-gtk-module:i386 gnome-icon-theme-full
      sudo apt-get install r-base-dev
      sudo apt-get install mpich:i386
      # By default, R_LIBS_USERS is not set, so need to allow package installation to site-library
      sudo chmod o+w /usr/local/lib/R/site-library
      echo $LD_LIBRARY_PATH
      ls /usr/lib
      ls /usr/lib64
      ldconfig -N -v $(sed 's/:/ /g' <<< $LD_LIBRARY_PATH)
    displayName: Install R, 32-bit MPICH, and 32-bit GTK libraries
  - script: | 
      git clone https://github.com/bbcb/bbcp.git ${AGENT_HOMEDIRECTORY}/bbcb
      cd ${AGENT_HOMEDIRECTORY}/bbcb/BlackBox
      ./switch-target `uname -s` GUI
      ./build
    displayName: Install BlackBox Cross-Platform
  - script: | 
      cd ${BUILD_SOURCESDIRECTORY}
      g++ -o MultiBUGS MultiBUGS.cpp
      Developer/BuildLinux | ${AGENT_HOMEDIRECTORY}/bbcb/BlackBox/run-dev0
      cp -r ${AGENT_HOMEDIRECTORY}/bbcb/BlackBox/Cons MultiBUGS-binary/
      chmod +x MultiBUGS-binary/OpenBUGS
      chmod +x MultiBUGS-binary/MultiBUGS
      chmod +x MultiBUGS-binary/run-MultiBUGS
      ldconfig -N -v $(sed 's/:/ /g' <<< $LD_LIBRARY_PATH)
    displayName: Build MultiBUGS
  - script: |
      # needed for devtools
      sudo apt-get update
      sudo apt-get install libcurl4-openssl-dev
      sudo apt-get install libssl-dev
      sudo apt-get install libgit2-dev
      sudo apt-get install libssh2-1-dev
      Rscript -e "install.packages(\"devtools\", repos=\"https://cloud.r-project.org\")" -e "install.packages(\"xml2\", repos=\"https://cloud.r-project.org\")" -e "devtools::install_github(\"MultiBUGS/R2MultiBUGS\")" -e "devtools::install_github(\"MultiBUGS/multibugstests\")"
    displayName: Install R packages
  - script: |
      which mpiexec
      which mpiexec.mpich
      ls -la /usr/bin
      file `which mpiexec`
      file `which mpiexec.mpich`
      file `which mpiexec.hydra`
      Xvfb :99 -screen 0 1024x768x24 </dev/null &
      sleep 5
      export DISPLAY=":99"
      cd ${BUILD_SOURCESDIRECTORY}/MultiBUGS-binary
      cat << EOF > script.txt
      modelDisplay('log')
      modelCheck("Examples/Seedsmodel.odc")
      modelData("Examples/Seedsdata.odc")
      modelCompile(2)
      modelSetRN(1)
      modelInits("Examples/Seedsinits.odc", 1)
      modelInits("Examples/Seedsinits1.odc", 2)
      modelGenInits()
      modelDistribute(2)
      modelUpdate(2000)
      samplesSet(alpha0)
      samplesSet(alpha1)
      samplesSet(alpha2)
      samplesSet(alpha12)
      modelUpdate(2000)
      samplesCoda('*', '/home/vsts/work/1/s/MultiBUGS-binary/')
      modelQuit('y')
      EOF
      cat MultiBUGS-binary/script.txr
      #DISPLAY=:99 ${BUILD_SOURCESDIRECTORY}/MultiBUGS-binary/run-MultiBUGS &
      #DISPLAY=:99 ${BUILD_SOURCESDIRECTORY}/MultiBUGS-binary/MultiBUGS
      cd ../
      mpiexec.mpich -n 1 ${AGENT_HOMEDIRECTORY}/bbcb/BlackBox/run-BlackBox /PAR MultiBUGS-binary/script.txt &
      #mpiexec -n 1 ${AGENT_HOMEDIRECTORY}/bbcb/BlackBox/run-BlackBox &
      sleep 100
      ls
      ls MultiBUGS-binary
      #DISPLAY=:99 Rscript -e "1+1"
      #DISPLAY=:99 Rscript -e "multibugstests:::bugs_examples_all(dir = \"${BUILD_SOURCESDIRECTORY}/MultiBUGS-binary/\", n.workers = 1, n.chains = 1, report = \"junit\")" &
      #sleep 1000
      DISPLAY=:99 import -window root screenshot.png
      #DISPLAY=:99 Rscript -e "multibugstests:::bugs_example(model = \"Air\", dir = \"${BUILD_SOURCESDIRECTORY}/MultiBUGS-binary/\", n.workers = 1, n.chains = 1)"
      which mpiexec
    displayName: Run tests
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'artifactName'
      targetPath: '$(Build.SourcesDirectory)/screenshot.png'
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'artifactName2'
      targetPath: '$(Build.SourcesDirectory)/MultiBUGS-binary/CODAchain1.txt'
  - task: PublishTestResults@2
    inputs:
      testResultsFiles: 'C:\MultiBUGS\TESTS-*$(WORKERS)workers-$(CHAINS)chains.xml'
      mergeTestResults: true
      testRunTitle: '$(WORKERS) workers; $(CHAINS) chains'
    condition: always()
    displayName: 'Publish Test Results'
